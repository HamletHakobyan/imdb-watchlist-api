// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Space.ImdbWatchList.Data;

namespace Space.ImdbWatchList.Data.Migrations
{
    [DbContext(typeof(ImdbWatchListDbContext))]
    [Migration("20211112025141_user-seed")]
    partial class userseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.Film", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WikiDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.Poster", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilmId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Posters");
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "hamlet.h.hakobyan@gmail.com",
                            Name = "Hamlet"
                        },
                        new
                        {
                            Id = 2,
                            Email = "aleq.hakobyan@gmail.com",
                            Name = "Aleq"
                        });
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.WatchList", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("FilmId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Added")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("OfferedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WatchedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "FilmId");

                    b.HasIndex("FilmId");

                    b.HasIndex("UserId");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.Poster", b =>
                {
                    b.HasOne("Space.ImdbWatchList.Data.Entities.Film", "Film")
                        .WithMany("Posters")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.WatchList", b =>
                {
                    b.HasOne("Space.ImdbWatchList.Data.Entities.Film", "Film")
                        .WithMany("InterestedUsers")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Space.ImdbWatchList.Data.Entities.User", "User")
                        .WithMany("FilmsInWatchList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.Film", b =>
                {
                    b.Navigation("InterestedUsers");

                    b.Navigation("Posters");
                });

            modelBuilder.Entity("Space.ImdbWatchList.Data.Entities.User", b =>
                {
                    b.Navigation("FilmsInWatchList");
                });
#pragma warning restore 612, 618
        }
    }
}
